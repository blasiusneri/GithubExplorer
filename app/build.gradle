apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"

    defaultConfig {
        applicationId "com.x.blas.githubexplorer"
        minSdkVersion 23
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility 1.8
        targetCompatibility 1.8
    }

    kapt {
        generateStubs = true
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    buildFeatures {
        viewBinding true
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "androidx.core:core-ktx:${rootProject.ext.androidx.coreKtxVersion}"
    implementation "androidx.appcompat:appcompat:${rootProject.ext.androidx.appCompatVersion}"
    implementation "androidx.constraintlayout:constraintlayout:${rootProject.ext.androidx.constraintlayoutVersion}"

    //Dagger stuff
    implementation "com.google.dagger:dagger:${rootProject.ext.google.daggerVersion}"
    implementation "com.google.dagger:dagger-android:${rootProject.ext.google.daggerVersion}"
    implementation "com.google.dagger:dagger-android-support:${rootProject.ext.google.daggerVersion}"
    annotationProcessor "com.google.dagger:dagger-android-processor:${rootProject.ext.google.daggerVersion}"
    annotationProcessor "com.google.dagger:dagger-compiler:${rootProject.ext.google.daggerVersion}"
    kapt "com.google.dagger:dagger-android-processor:${rootProject.ext.google.daggerVersion}"
    kapt "com.google.dagger:dagger-compiler:${rootProject.ext.google.daggerVersion}"
    implementation "javax.annotation:jsr250-api:${rootProject.ext.javax.jsr250Version}"
    implementation "javax.inject:javax.inject:${rootProject.ext.javax.injectVersion}"

    implementation "com.squareup.retrofit2:retrofit:${rootProject.ext.square.retrofitVersion}"
    implementation "com.squareup.retrofit2:converter-gson:${rootProject.ext.square.retrofitVersion}"
    implementation "com.squareup.retrofit2:adapter-rxjava2:${rootProject.ext.square.retrofitVersion}"

    implementation "com.google.code.gson:gson:${rootProject.ext.google.gsonVersion}"

    implementation "com.android.support:multidex:${rootProject.ext.androidx.multidexSupportVersion}"

    implementation "io.reactivex.rxjava2:rxjava:${rootProject.ext.reactivex.rxjava2Version}"
    implementation "io.reactivex.rxjava2:rxandroid:${rootProject.ext.reactivex.rxandroid2Version}"

    implementation "androidx.lifecycle:lifecycle-livedata-ktx:${rootProject.ext.androidx.lifecycleVersion}"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:${rootProject.ext.androidx.lifecycleVersion}"
    implementation "androidx.lifecycle:lifecycle-extensions:${rootProject.ext.androidx.lifecycleVersion}"
    implementation "androidx.lifecycle:lifecycle-common-java8:${rootProject.ext.androidx.lifecycleVersion}"
    kapt "androidx.lifecycle:lifecycle-compiler:${rootProject.ext.androidx.lifecycleVersion}"
    implementation "androidx.fragment:fragment-ktx:${rootProject.ext.androidx.fragmentKtxVersion}"

    implementation "androidx.recyclerview:recyclerview:${rootProject.ext.androidx.recyclerviewVersion}"
    implementation "androidx.recyclerview:recyclerview-selection:${rootProject.ext.androidx.recyclerviewSelectionVersion}"
    implementation "androidx.cardview:cardview:${rootProject.ext.androidx.cardviewVersion}"

    implementation "com.github.bumptech.glide:glide:${rootProject.ext.bumptech.glideVersion}"
    annotationProcessor "com.github.bumptech.glide:compiler:${rootProject.ext.bumptech.glideVersion}"
}